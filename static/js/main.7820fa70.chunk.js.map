{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ApiService/ApiService.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","props","useState","value","setValue","className","styles","SearchForm","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","handleChange","ImageGalleryItem","images","openModal","map","el","onClick","src","largeImageURL","id","webformatURL","alt","ImageGallery","hits","toggleModal","Button","incrementPage","scrollingRef","useRef","ref","Loader","loader","color","height","width","timeout","React","Component","modalRoot","document","querySelector","Modal","img","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","fetchApi","q","page","BASE_URL","fetch","then","r","json","App","setPage","setImages","searchValue","setSearchValue","setStatus","showModal","setShowModal","setLargeImageURL","largeImage","largeImgData","onPushImagesToState","catch","error","console","log","prevImages","trim","length","prevPage","setTimeout","current","scrollIntoView","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7820fa70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3qY3y\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1GzBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1tT6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3y3ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__LEdgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__JZjAc\",\"SearchForm\":\"Searchbar_SearchForm__3CAO8\",\"SearchForm-button\":\"Searchbar_SearchForm-button__2qyOf\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__1Ko1X\",\"SearchForm-input\":\"Searchbar_SearchForm-input__1B3b_\"};","import React, {useState} from 'react';\r\nimport styles from './Searchbar.module.css';\r\n\r\n// export default class Searchbar extends Component {\r\n//     state = {\r\n//       value: '',\r\n//      }\r\n\r\n//      handleChange = e => {\r\n//     this.setState({\r\n//       value: e.currentTarget.value,\r\n//     })\r\n  \r\n//   };\r\n\r\n//     handleSubmit = e => {\r\n//   e.preventDefault();\r\n//   if(this.state.value.trim() === ''){\r\n//     return toast.error(\"Type data for search!\");\r\n    \r\n//   }\r\n//     this.props.onSubmit(this.state.value);\r\n//     this.setState({ value: '' });\r\n//   };\r\n\r\n\r\n//      render () {\r\n//          return (\r\n// <header className={styles.Searchbar}>\r\n//   <form onSubmit={this.handleSubmit} className={styles.SearchForm} >\r\n//     <button type=\"submit\" className={styles[`SearchForm-button`]}>\r\n//       <span className={styles[`SearchForm-button-label`]}>Search</span>\r\n//     </button>\r\n\r\n//     <input\r\n//       className={styles[`SearchForm-input`]}\r\n//       type=\"text\"\r\n//       autoComplete=\"off\"\r\n//       autoFocus\r\n//       placeholder=\"Search images and photos\"\r\n//       value={this.state.value}\r\n//       onChange={e => {\r\n//         this.handleChange(e)\r\n//       }}\r\n//     />\r\n//   </form>\r\n// </header>\r\n// )\r\n// }\r\n// };\r\n\r\n\r\n\r\nfunction Searchbar(props) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onSubmit(value);\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={styles['SearchForm-button']}>\r\n          <span className={styles['SearchForm-button-label']}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles['SearchForm-input']}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={value}\r\n          onChange={e => {\r\n            handleChange(e);\r\n          }}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;","import styles from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, openModal }) => {\r\n  return images.map(el => (\r\n    <li\r\n      key={el.id}\r\n      className={styles['ImageGalleryItem']}\r\n      onClick={() => {\r\n        openModal({ src: el.largeImageURL, id: el.id });\r\n      }}\r\n    >\r\n      <img\r\n        className={styles['ImageGalleryItem-image']}\r\n        src={el.webformatURL}\r\n        alt={el.id}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ hits, toggleModal }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      <ImageGalleryItem images={hits} openModal={toggleModal} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  hits: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React, { useRef } from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ incrementPage }) => {\r\n  const scrollingRef = useRef();\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        incrementPage(scrollingRef);\r\n      }}\r\n      className={styles.Button}\r\n      ref={scrollingRef}\r\n      type=\"button\"\r\n    >\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  incrementPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n\r\n","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport LoaderElement from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nexport default class Loader extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <LoaderElement\r\n        className = {styles.loader}\r\n        type=\"Grid\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={1000} //3 secs\r\n      />\r\n    );\r\n  }\r\n};","\r\nimport React, {useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n// class Modal extends React.Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.toggleModal();\r\n//     }\r\n//     if (e.target === e.currentTarget) {\r\n//       this.props.toggleModal();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const data = this.props.img;\r\n//     return createPortal(\r\n//       <div className={styles.Overlay} onClick={this.handleKeyDown}>\r\n//         <Loader />\r\n//         <div className={styles.Modal}>\r\n//           <img src={data.src} alt={data.id} />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Modal;\r\nexport default function Modal ({img, toggleModal}) {\r\n useEffect(() => {\r\n  const handleKeyDown = e => {\r\n    if(e.code === 'Escape') {\r\n      toggleModal();\r\n    }\r\n  };\r\n  window.addEventListener('keydown', handleKeyDown);\r\n  return () => {\r\n    window.removeEventListener('keydown', handleKeyDown);\r\n  }\r\n }, [toggleModal]);\r\n \r\n const handleBackdropClick = e => {\r\n   if (e.target === e.currentTarget){\r\n    toggleModal();\r\n   }\r\n }\r\n\r\n return createPortal(\r\n  <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n    <Loader />\r\n    <div className={styles.Modal}>\r\n      <img className={styles['modal-img']} src={img.src} alt={img.id} />\r\n    </div>\r\n  </div>,\r\n  modalRoot,\r\n);\r\n}","function fetchApi(q, page) {\r\n    const KEY = 'key=23877606-1096bee22002de3079c9510e6';\r\n    const BASE_URL = `https://pixabay.com/api/?q=${q}&page=${page}&${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    const fetchData = fetch(BASE_URL).then(r => r.json());\r\n    return fetchData;\r\n    \r\n  }\r\n  \r\n\r\n  export default fetchApi;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport fetchApi from './components/ApiService/ApiService';\n\n// class App extends React.Component {\n//   state = {\n//     page: 1,\n//     images: [],\n//     searchValue: '',\n//     status: 'idle',\n//     showModal: false,\n//     largeImageURL: {},\n//     error: '',\n//   };\n\n//   componentDidMount() {\n//     this.setState({ status: 'pending' });\n//   }\n\n//   toggleModal = largeImage => {\n//     const largeImgData = largeImage ? largeImage : {};\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//       largeImageURL: largeImgData,\n//     }));\n//   };\n\n//   getData(q, page) {\n//     fetchApi(q, page)\n//       .then(images => this.onPushImagesToState(images))\n//       .catch(error => this.setState({ error: error }));\n//   }\n\n//   onPushImagesToState = images => {\n//     this.setState(prevState => ({\n//       status: 'resolved',\n//       images: [...prevState.images, ...images.hits],\n//     }));\n//   };\n\n//   onSubmitForm = value => {\n//     if (value.trim() === '') return;\n//     if (value === this.state.searchValue) return;\n//     this.setState({\n//       status: 'pending',\n//       images: [],\n//       searchValue: value,\n//       page: 1,\n//     });\n//     this.getData(value, this.state.page);\n//   };\n\n//   onLoadMore = ref => {\n//     const { searchValue, page } = this.state;\n//     this.setState(prevState => ({\n//       status: 'pending',\n//       page: prevState.page + 1,\n//     }));\n//     this.getData(searchValue, page + 1);\n//     setTimeout(() => {\n//       ref.current.scrollIntoView({ behavior: 'smooth' });\n//     }, 500);\n//   };\n\n//   render() {\n//     const { images, status, showModal, largeImageURL, searchValue } =\n//       this.state;\n//     return (\n//       <div className=\"App\">\n//         {showModal && (\n//           <Modal img={largeImageURL} toggleModal={this.toggleModal} />\n//         )}\n//         <Searchbar onSubmit={this.onSubmitForm} />\n//         {status === 'pending' && <Loader/>}\n//         {searchValue.trim() === '' && (\n//           <h2 className=\"title\">Введите запрос в поиск</h2>\n//         )}\n//         {images.length > 0 && (\n//           <ImageGallery hits={images} toggleModal={this.toggleModal} />\n//         )}\n//         {images.length > 0 && <Button incrementPage={this.onLoadMore} />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nexport default function App () {\n  const [page, setPage] = useState(0);\n  const [images, setImages] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState({});\n  \n\n  const toggleModal = largeImage => {\n    const largeImgData = largeImage ? largeImage : {};\n    setShowModal(!showModal);\n    setLargeImageURL(largeImgData);\n};\n\n\nuseEffect(() => {\nif (page === 0) return;\nfetchApi(searchValue, page)\n      .then(images => onPushImagesToState(images))\n      .catch(error => console.log(error));\n}, [searchValue, page]\n);\n  const onPushImagesToState = images => {\n  setStatus ('resolved');\n  setImages(prevImages => {\n    return [...prevImages, ...images.hits];\n  });\n}\n\nconst onSubmitForm = value => {\n      if (value.trim() === '') return;\n      if (value === setSearchValue) return;\n      setStatus('pending');\n      setImages([]);\n      setSearchValue(value);\n      setPage(1);\n    };\n\nconst onLoadMore = ref => {\n  setStatus('pending');\n  setPage (prevPage => {\n  return prevPage + 1;\n})\n  setTimeout(() => {\n            ref.current.scrollIntoView({ behavior: 'smooth' });\n          }, 500);\n        };\nreturn (\n  <div className=\"App\">\n  {showModal && (\n  <Modal img={largeImageURL} toggleModal={toggleModal} />\n  )}\n  <Searchbar onSubmit={onSubmitForm} />\n  {setStatus === 'pending' && <Loader/>}\n  {searchValue.trim() === '' && (\n  <h2 className=\"title\">Введите запрос в поиск</h2>\n  )}\n  {images.length > 0 && (\n  <ImageGallery hits={images} toggleModal={toggleModal} />\n  )}\n  {images.length > 0 && <Button incrementPage={onLoadMore} />}\n  </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__16-4S\",\"Modal\":\"Modal_Modal__z9MzC\"};"],"sourceRoot":""}